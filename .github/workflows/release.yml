name: Auto Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: cashapp/activate-hermit@v1

      - name: Run tests
        run: zig build test --summary all

  release:
    name: Create Release
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for changelog generation

      - uses: cashapp/activate-hermit@v1

      - name: Determine release version
        id: version
        run: |
          set -euo pipefail
          VERSION=$(sed -n 's/.*\.version\s*=\s*"\([0-9]\+\.[0-9]\+\.[0-9]\+\)".*/\1/p' build.zig.zon | head -n 1)
          if [ -z "$VERSION" ]; then
            echo "Failed to read version from build.zig.zon" >&2
            exit 1
          fi

          TAG="v${VERSION}"

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> $GITHUB_OUTPUT

          if git rev-parse --verify "$TAG" >/dev/null 2>&1; then
            echo "should_release=false" >> $GITHUB_OUTPUT
            echo "Release $TAG already exists"
          else
            echo "should_release=true" >> $GITHUB_OUTPUT
            echo "Preparing release for $TAG"
          fi

      - name: Create GitHub Release
        if: steps.version.outputs.should_release == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          gh release create "${{ steps.version.outputs.tag }}" \
            --title "${{ steps.version.outputs.tag }}" \
            --target "${GITHUB_SHA}" \
            --verify-tag \
            --generate-notes
