name: Auto Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: cashapp/activate-hermit@v1

      - name: Run tests
        run: zig build test --summary all

  release:
    name: Create Release
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for svu

      - uses: cashapp/activate-hermit@v1

      - name: Calculate next version
        id: version
        run: |
          # Get next version using svu
          NEXT_VERSION=$(svu next)
          CURRENT_VERSION=$(svu current)

          echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "next=$NEXT_VERSION" >> $GITHUB_OUTPUT

          # Check if version needs bumping
          if [ "$CURRENT_VERSION" = "$NEXT_VERSION" ]; then
            echo "should_release=false" >> $GITHUB_OUTPUT
            echo "No version bump needed"
          else
            echo "should_release=true" >> $GITHUB_OUTPUT
            echo "Version bump: $CURRENT_VERSION -> $NEXT_VERSION"
          fi

      - name: Update version in build.zig.zon
        if: steps.version.outputs.should_release == 'true'
        run: |
          NEW_VERSION="${{ steps.version.outputs.next }}"
          sed -i "s/\.version = \".*\"/\.version = \"$NEW_VERSION\"/" build.zig.zon

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add build.zig.zon
          git commit -m "chore: bump version to $NEW_VERSION [skip ci]"
          git push

      - name: Generate release notes
        if: steps.version.outputs.should_release == 'true'
        id: release_notes
        run: |
          # Use git-cliff or simple git log for release notes
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          NEW_VERSION="${{ steps.version.outputs.next }}"

          {
            echo "## What's Changed"
            echo ""

            if [ -n "$LAST_TAG" ]; then
              git log $LAST_TAG..HEAD --pretty=format:"- %s (%h)" --reverse
            else
              git log --pretty=format:"- %s (%h)" --reverse | head -20
            fi

            echo ""
            echo ""
            echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/${LAST_TAG:-}...v$NEW_VERSION"
          } > release_notes.md

          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          cat release_notes.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        if: steps.version.outputs.should_release == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.next }}
          name: v${{ steps.version.outputs.next }}
          body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
          draft: false
          prerelease: false
